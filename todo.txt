- create error messages in validators (MessageHeaderValidator)
	or
	change method parameters in Class MessageHeaderValidator from messageHeader to actual used messageHeader field(s)

- change wsdl definition to one operation (containing all ebxml elements) and 'parse' message in Mule?
	- 1 generic message processor will call the specific message processor(s) depending on the content of the message (action and available elements)
	- also possible to process messages with ErrorList and Acknowledgment elements

2.1.x:
- create documentation/manual
- Message Responses:
	- validate received error and acknowledgment messages
	- add duplicate elimination???
	- if invalid then just store (if not duplicate), or ignore?
	- if duplicate refToMessageIds, store (if not duplicate messageId), or ignore?
- implement MSH Ping and MessageStatus Services in EbMSAdapter Interface
	- make EbMS Ping and MessageStatus Services async
	- store Ping/Pong and MessageStatus Request and Response messages in the database???
	- validate MessageHeader against CPA
	- add duplicate elimination???
	- add to MessageStatus Service to check if message has same cpaId then messageStatus message if not set messageStatus to Unauthorized
X ignore duplicate messageIds for all messages?
	X make message_id unique in ebms_message???
	- make message_id primary key in ebms_message???
	- fix quickfixes in StoreEbMSMessageErrorIn and StoreEbMSAcknowledgmentIn
- ignore response messages with duplicate refToMessageIds?
- improve MessageHeader validation?
	- validate role and service separately?
	- validate required fields (ids, timestamps, etc.)?
- improve error handling and logging
	- collect list of errors in message validators (instead of exit on the first error)?
		- implement internal error list to add the errors
	- allow ErrorList (if severity is warning) to be a part of Acknowledgment message?
- improve validation of received Error and Acknowledgment messages
- improve DuplicateElimination
	- check if duplicateElimination behaves according to specs (when duplicate message (=messageId) is sent with different content or signature)
		- remove EbMSMessageHeaderCompareFilter (not according to EbMS specs) or make it configurable?
		- check order: security check, duplicate elimination, header check?
- improve TimeToLive and PersistDuration checks
	- store TimeToLive in ebms_message???
- remove EbMSMessageDataValidationFilter (not according to EbMS specs)
- use ebms-message.parent_id to link a request and its response message
- store url (and signMessage???) in ebms_send_event
- handle SOAP Faults?
	- store
	- end retry
- validate Reference element if present in Acknowledgment against original message?

- configure CPA caching (or load CPA once per message)?
- check CPA for invalid use of urn:oasis:names:tc:ebxml-msg:service namespace for defined services?
- get hostname (needed for messageId) from CPA

- mark message as delivered (or failed) when Acknowledgment is received and message is not marked yet
- notify From Party somehow on delivery failure (after all retries have failed) (this is a MUST)???
	- notify From Party somehow on succesful delivery ignoring messages with duplicate refToMessageIds (this is OPTIONAL)
- if Acknowledgment is signed, check references in Acknowledgment, otherwise message was not delivered successfully

2.2.x:
/ implement Ping Service
	- return NotSupported ErrorCode?
/ implement MessageStatus Service
	- return NotSupported ErrorCode?
	- NotRecognized if message identified by refToMessageId does not exist in the data store?
	- Received only if message identified by refToMessageId is successfully received and did not generate ErrorMessage?
		- What is the status if message identified by refToMessageId is received, but generated ErrorMessage?
		- Is messageStatus always received when message is received?
- implement MessageOrder
- implement syncReplyMode?
- implement ackRequested (mode=never|perMessage)
- implement duplicateElimination (mode=never)
- implement Encoding?
- implement JMS Client interface?
- implement dynamic cxf outbound endpoints (request url has to be resolved from CPA)?

3.x.x:
- update adapter to Mule 3
- support additional protocols besides http(s), like mail, file, etc?
- store http response status code with ebms send event

considerations:
- change wsdl definition to one operation (containing all ebxml elements) and 'parse' message in Mule?
- replace cxf interface?
- store datetime objects as UTC datetime in database (do not use sysdate anymore!)?
