/ validate packaging
/ manual
/ web adapter

- improve ebMSMessageContentValidator
- optimize EbMSMessageutils and CPAUtils
	- implement CPARegistry and CPA object
- change events
	- create only one event
	- add expiration time and retry attempt nr to event
- create message and event queues (and managers)

- remove hard coded UTF-8 encoding from DAO's?
- improve detection of signing etc. in CPA
- improve CPA validation concerning signing etc.
- use try with resources statement on AutoClosable resources

2.4:
- improve CPA validation
	- check used CPA fields in CPAUtils and validate them
	- validate on unsupported features

- implement push interface with jms
- implement push soap interface
- implement events with quartz or jms
- implement security on soap interface

- test multiple certificates in keystore

2.x:
- improve error handling and logging on exceptions on response messages (ErrorMessage and Acknowledgment)

- validate message composition using SimplePart and Packaging definition from CPA 
- validate message format (available elements versus action)
- improve header validation
	- add separate service and action validation

- implement SSLFactoryManager that returns a CPA/hostname related SSLSocketFactory to handle different key/certificate pairs
	- load right SSLFactoryManager on each URLConnection request

- make EbMSMessageProcessor event driven
	- implement eventManager
	- replace dao.insertSendEvent(messageId) (and/or EbMSMessageUtils.getEbMSSendEvents(cpa,message)) to eventManager.generateSendEvent(EbMSDocument)
	- implement eventManager.generateReceiveEvent(MimeMessage/EbMSDocument)

- let DeliveryManager work with EbMSDocument instead of EbMSMessage?
	- change messageQueue from EbMSMessage to EbMSDocument
	- get messageId from EbMSDocument

- remove unnecessary defined Interfaces and custom Exceptions
- remove EbMS(Message) prefix on classes; add EbMS(Message) prefix on bean ids? 

3.0:
- validate requested uri

- implement EbMSFileAttachment (file proxy) and EbMSDBAttachment (db proxy) for large messages?

- implement business signals handling (ReceiptAcknowledgment, AcceptanceAcknowledgment, and Exception)
- implement business response messages handling

- replace events table by queue?
- add push message interface with queue?

- replace custom message writer by mime4j???
- replace xmlsec by bouncycastle???