- improve CPA validation

- EbMSResponseHandlers examine and use content-type while parsing response
	- use EbMSMessageReader
	- wrap exception on DOMUtils.read() empty stream

- validate message composition using SimplePart and Packaging definition from CPA 
- validate message format (available elements versus action)
- improve header validation
	- add separate service and action validation

- improve implementation of BusinessTransactionCharacteristics
- improve implementation of MessagingCharacteristics:
	- ackRequested per message
	- ackSignatureRequested (per message)

- implement ackRequested/best-effort
- implement syncReply

- test multiple certificates in keystore

- implement SSLFactoryManager that returns a CPA/hostname related SSLSocketFactory to handle different key/certificate pairs
	- load right SSLFactoryManager on each URLConnection request

- make EbMSMessageProcessor event driven
	- implement eventManager
	- replace dao.insertSendEvent(messageId) (and/or EbMSMessageUtils.getEbMSSendEvents(cpa,message)) to eventManager.generateSendEvent(EbMSDocument)
	- implement eventManager.generateReceiveEvent(MimeMessage/EbMSDocument)

- let DeliveryManager work with EbMSDocument instead of EbMSMessage?
	- change messageQueue from EbMSMessage to EbMSDocument
	- get messageId from EbMSDocument

- remove unnecessary defined Interfaces and custom Exceptions
- remove EbMS(Message) prefix on classes; add EbMS(Message) prefix on bean ids? 

3.0:
- add fromParty and toParty (by PartyName) to EbMSMessageContext (and store them in ebms_message)
- implement sync deliveryManager
	- send message direct (send retries from queue)
	- for sync communication keep channel open
	- 1694 The Acknowledgment Message can be sent at the same time as the response to the received message. 
- validate sender uri

- implement EbMSFileAttachment (file proxy) and EbMSDBAttachment (db proxy) for large message processing?

